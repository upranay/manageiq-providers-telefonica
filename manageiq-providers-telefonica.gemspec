# -*- encoding: utf-8 -*-
# stub: manageiq-providers-telefonica 0.1.0 ruby lib

Gem::Specification.new do |s|
  s.name = "manageiq-providers-telefonica".freeze
  s.version = "0.1.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["ManageIQ Developers".freeze]
  s.date = "2018-10-01"
  s.description = "Telefonica Provider for ManageIQ".freeze
  s.files = ["app/decorators".freeze, "app/decorators/manageiq".freeze, "app/decorators/manageiq/providers".freeze, "app/decorators/manageiq/providers/telefonica".freeze, "app/decorators/manageiq/providers/telefonica/cloud_manager".freeze, "app/decorators/manageiq/providers/telefonica/cloud_manager/template_decorator.rb".freeze, "app/models/manageiq/providers/telefonica".freeze, "app/models/manageiq/providers/telefonica/base_metrics_capture.rb".freeze, "app/models/manageiq/providers/telefonica/cinder_manager_mixin.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager".freeze, "app/models/manageiq/providers/telefonica/cloud_manager.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/auth_key_pair.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/availability_zone.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/availability_zone_null.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_resource_quota.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_tenant.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_volume".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_volume.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_volume/operations.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_volume_backup.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_volume_snapshot.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/cloud_volume_type.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/event_catcher".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/event_parser.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/flavor.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/host_aggregate.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/metrics_capture.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/metrics_collector_worker".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/metrics_collector_worker.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/orchestration_service_option_converter.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/orchestration_stack".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/orchestration_stack.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/orchestration_stack/status.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/orchestration_template.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision/cloning.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision/configuration.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision/options_helper.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision/volume_attachment.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision_workflow".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision_workflow.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/provision_workflow/dialog_field_validation.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/refresh_parser.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/refresh_worker".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/refresher.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/template.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/associate_ip.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/manage_security_groups.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/operations".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/operations.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/operations/guest.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/operations/power.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/operations/relocation.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/operations/snapshot.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/remote_console.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vm/resize.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vnf".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vnf.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vnf/status.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/vnfd_template.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/volume_snapshot_template.rb".freeze, "app/models/manageiq/providers/telefonica/cloud_manager/volume_template.rb".freeze, "app/models/manageiq/providers/telefonica/discovery.rb".freeze, "app/models/manageiq/providers/telefonica/event_catcher_mixin.rb".freeze, "app/models/manageiq/providers/telefonica/helper_methods.rb".freeze, "app/models/manageiq/providers/telefonica/identity_sync_mixin.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager".freeze, "app/models/manageiq/providers/telefonica/infra_manager.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/auth_key_pair.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/ems_cluster.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/event_catcher".freeze, "app/models/manageiq/providers/telefonica/infra_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/event_parser.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/host".freeze, "app/models/manageiq/providers/telefonica/infra_manager/host.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/host/operations.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/host_service_group.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/metrics_capture.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/metrics_collector_worker".freeze, "app/models/manageiq/providers/telefonica/infra_manager/metrics_collector_worker.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/orchestration_stack.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/refresh_parser.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/refresh_worker".freeze, "app/models/manageiq/providers/telefonica/infra_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/refresher.rb".freeze, "app/models/manageiq/providers/telefonica/infra_manager/template.rb".freeze, "app/models/manageiq/providers/telefonica/inventory".freeze, "app/models/manageiq/providers/telefonica/inventory.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector".freeze, "app/models/manageiq/providers/telefonica/inventory/collector.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/cloud_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/helper_methods.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/network_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/storage_manager".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/storage_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/collector/target_collection.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/parser".freeze, "app/models/manageiq/providers/telefonica/inventory/parser.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/parser/cloud_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/parser/network_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/parser/storage_manager".freeze, "app/models/manageiq/providers/telefonica/inventory/parser/storage_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/parser/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister".freeze, "app/models/manageiq/providers/telefonica/inventory/persister.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/cloud_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/definitions".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/definitions/cloud_collections.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/definitions/network_collections.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/definitions/storage_collections.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/definitions/utils.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/network_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/storage_manager".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/storage_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/telefonica/inventory/persister/target_collection.rb".freeze, "app/models/manageiq/providers/telefonica/manager_mixin.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager".freeze, "app/models/manageiq/providers/telefonica/network_manager.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/cloud_network".freeze, "app/models/manageiq/providers/telefonica/network_manager/cloud_network.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/cloud_network/private.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/cloud_network/public.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/cloud_subnet.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/event_catcher".freeze, "app/models/manageiq/providers/telefonica/network_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/event_parser.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/floating_ip.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/metrics_capture.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/metrics_collector_worker".freeze, "app/models/manageiq/providers/telefonica/network_manager/metrics_collector_worker.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/network_port.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/network_router.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/refresh_parser.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/refresh_worker".freeze, "app/models/manageiq/providers/telefonica/network_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/refresher.rb".freeze, "app/models/manageiq/providers/telefonica/network_manager/security_group.rb".freeze, "app/models/manageiq/providers/telefonica/provider.rb".freeze, "app/models/manageiq/providers/telefonica/refresh_parser_common".freeze, "app/models/manageiq/providers/telefonica/refresh_parser_common/flavors.rb".freeze, "app/models/manageiq/providers/telefonica/refresh_parser_common/helper_methods.rb".freeze, "app/models/manageiq/providers/telefonica/refresh_parser_common/images.rb".freeze, "app/models/manageiq/providers/telefonica/refresh_parser_common/objects.rb".freeze, "app/models/manageiq/providers/telefonica/refresh_parser_common/orchestration_stacks.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/event_catcher".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/event_parser.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/refresh_parser.rb".freeze, "app/models/manageiq/providers/telefonica/storage_manager/cinder_manager/refresher.rb".freeze, "config/initializers/gettext.rb".freeze, "config/settings.yml".freeze, "lib/manageiq-providers-telefonica.rb".freeze, "lib/manageiq/providers".freeze, "lib/manageiq/providers/telefonica".freeze, "lib/manageiq/providers/telefonica.rb".freeze, "lib/manageiq/providers/telefonica/engine.rb".freeze, "lib/manageiq/providers/telefonica/legacy".freeze, "lib/manageiq/providers/telefonica/legacy/events".freeze, "lib/manageiq/providers/telefonica/legacy/events/telefonica_ceilometer_event_converter.rb".freeze, "lib/manageiq/providers/telefonica/legacy/events/telefonica_ceilometer_event_monitor.rb".freeze, "lib/manageiq/providers/telefonica/legacy/events/telefonica_event.rb".freeze, "lib/manageiq/providers/telefonica/legacy/events/telefonica_null_event_monitor.rb".freeze, "lib/manageiq/providers/telefonica/legacy/events/telefonica_rabbit_event_monitor.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_configuration_parser.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_event_monitor.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/baremetal_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/compute_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/event_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/handle.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/handled_list.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/identity_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/image_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/introspection_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/metering_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/metric_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/multi_tenancy".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/multi_tenancy/base.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/multi_tenancy/loop.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/multi_tenancy/none.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/multi_tenancy/option.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/network_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/nfv_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/orchestration_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/pagination".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/pagination/base.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/pagination/marker.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/pagination/none.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/pagination/page_number.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/storage_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/volume_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/telefonica_handle/workflow_delegate.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test".freeze, "lib/manageiq/providers/telefonica/legacy/test/compute_telefonica_handle_example.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test/event_monitor_example.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test/image_telefonica_handle_example.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test/metering_event_monitor_example.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test/storage_telefonica_handle_example.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test/tenant_telefonica_handle_example.rb".freeze, "lib/manageiq/providers/telefonica/legacy/test/volume_telefonica_handle_example.rb".freeze, "lib/manageiq/providers/telefonica/version.rb".freeze, "lib/tasks/README.md".freeze, "lib/tasks_private".freeze, "lib/tasks_private/telefonica.rake".freeze, "lib/tasks_private/spec.rake".freeze, "lib/vcr_recorder.rb".freeze]
  s.homepage = "https://github.com/ManageIQ/manageiq-providers-telefonica".freeze
  s.licenses = ["Apache-2.0".freeze]
  s.rubygems_version = "2.7.7".freeze
  s.summary = "Telefonica Provider for ManageIQ".freeze

  s.installed_by_version = "2.7.7" if s.respond_to? :installed_by_version

  if s.respond_to? :specification_version then
    s.specification_version = 4

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<activesupport>.freeze, ["< 5.2", ">= 5.0"])
      s.add_runtime_dependency(%q<bunny>.freeze, ["~> 2.1.0"])
      s.add_runtime_dependency(%q<excon>.freeze, ["~> 0.40"])
      s.add_runtime_dependency(%q<fog-openstack>.freeze, ["= 0.1.27"])
      s.add_runtime_dependency(%q<more_core_extensions>.freeze, ["~> 3.2"])
      s.add_development_dependency(%q<codeclimate-test-reporter>.freeze, ["~> 1.0.0"])
      s.add_development_dependency(%q<simplecov>.freeze, [">= 0"])
    else
      s.add_dependency(%q<activesupport>.freeze, ["< 5.2", ">= 5.0"])
      s.add_dependency(%q<bunny>.freeze, ["~> 2.1.0"])
      s.add_dependency(%q<excon>.freeze, ["~> 0.40"])
      s.add_dependency(%q<fog-openstack>.freeze, ["= 0.1.27"])
      s.add_dependency(%q<more_core_extensions>.freeze, ["~> 3.2"])
      s.add_dependency(%q<codeclimate-test-reporter>.freeze, ["~> 1.0.0"])
      s.add_dependency(%q<simplecov>.freeze, [">= 0"])
    end
  else
    s.add_dependency(%q<activesupport>.freeze, ["< 5.2", ">= 5.0"])
    s.add_dependency(%q<bunny>.freeze, ["~> 2.1.0"])
    s.add_dependency(%q<excon>.freeze, ["~> 0.40"])
    s.add_dependency(%q<fog-openstack>.freeze, ["= 0.1.27"])
    s.add_dependency(%q<more_core_extensions>.freeze, ["~> 3.2"])
    s.add_dependency(%q<codeclimate-test-reporter>.freeze, ["~> 1.0.0"])
    s.add_dependency(%q<simplecov>.freeze, [">= 0"])
  end
end
